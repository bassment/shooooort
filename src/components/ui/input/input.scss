.wrapper {
  position: relative;
}

.inputWrapper {
  box-sizing: border-box;
}

.input {
  position: relative;
  z-index: 2;
  display: block;
  width: 100%;
  font-size: $fontSizeM;
  font-weight: $fontWeightMedium;
  line-height: 1.8;
  color: $colorBlackAdditional;
  background-color: rgba(0,0,0,0);
  background-position: center bottom,center calc(99%);
  background-repeat: no-repeat;
  background-size: 0 2px,100% 1px;
  padding: 0;
  border: 0;
  transition: background 0s ease-out 0s;

  &:focus {
    background-size: 100% 2px,100% 1px;
    outline: 0;
    transition-duration: .3s;
  }
}

.inputNormal {
  background-image: linear-gradient($colorPrimary, $colorPrimary),linear-gradient(rgba(120,130,140,.13),rgba(120,130,140,.13));
}

.inputBordered {
  border: 2px solid rgba(120,130,140,.13);
  border-radius: $radiusNormal;
  transition: border-color 0.5s;
  outline: none;
}

.inputBorderedFocused {
  border: 2px solid $colorPrimary;
}

.inputError {
  background-image: linear-gradient($colorAlert, $colorAlert),linear-gradient(rgba(120,130,140,.13),rgba(120,130,140,.13));
}

.noResize {
  resize: none;
}

.textareaNormal {
  height: $heightTextarea;
}

.label {
  position: absolute;
  z-index: 1;
  top: 3px;
  color: $colorTextSecondary;
  font-size: $fontSizeM;
  font-weight: $fontWeightRegular;
  transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;
  transform: scale(1) translate(0px, 0px);
  transform-origin: left top 0px;
}

.labelFocused {
  position: absolute;
  top: -24px;
  left: 0;
  color: $colorPrimary;
  transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms; 
  transform: scale(0.85) translate(0px, 0px); 
  transform-origin: left top 0px; 
}

.labelBordered {
  top: 20px;
  left: 1rem;
}

.fixedLabel {
  top: -24px;
  color: $colorPrimary;
  font-size: $fontSizeM;
  font-weight: $fontWeightRegular;
  transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms; 
  transform: scale(0.85) translate(0px, 0px); 
  transform-origin: left top 0px; 
}

.floatingLabelSpace {
  margin-top: 1.5rem;
}

.errorLabel {
  color: $colorAlert;
}

.errorLabelFocused {
  color: $colorAlert;
}

.placeholder {
  position: absolute;
  z-index: 1;
  opacity: 0;
  visibility: hidden;
  top: 3px;
  width: 100%;
  color: $colorTextSecondary;
  font-size: $fontSizeM;
  font-weight: $fontWeightRegular;
  box-sizing: border-box;
  overflow: hidden;
  text-overflow: ellipsis;
}

.placeholderFocused {
  opacity: 1;
  visibility: visible;
}

.placeholderBordered {
  border: 2px solid transparent;
}

.errorText {
  display: block;
  color: $colorAlert;
  font-size: $fontSizeXS;
  font-weight: $fontWeightRegular;
  padding-top: 0.5rem;
  min-height: 21px;
}

.show {
  opacity: 1;
  visibility: visible;
}

.hide {
  opacity: 0 !important;
  visibility: hidden !important;
}

.boxed {
  padding: 1rem;
}

.ellipsisHeight {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  /* autoprefixer: off */
  -webkit-box-orient: vertical;
  /* autoprefixer: on */
  height: calc(#{$heightTextarea} + 1rem);
}

.ellipsisWidth {
  white-space: nowrap;
}